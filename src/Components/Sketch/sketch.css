.sketch {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: white;
  padding: 2rem;
  padding-bottom: 4rem;
  padding-right: 15rem;
  text-align: center;
  font-weight: bold;
  letter-spacing: 2px;
  width: 100%;
  max-width: 800px;
  height: auto;
  overflow: visible;
  box-sizing: border-box;
  /* border: solid red 5px; */

  position: relative;
  overflow: hidden; 
}

@keyframes dash-loop {
  0% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: -522; /* Must match stroke-dasharray length */
    stroke-dasharray: .2;
  }
}




/* --- SVG initially hidden --- */
.sketch svg {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.35s ease;
}

/* --- rect styling --- */
.sketch rect {
  fill: none;
  stroke: #fff;
  stroke-width: 3;
  stroke-dasharray: 522; /* perimeter approx. for a rounded rect */
  stroke-dashoffset: 0;
  /* rx: 20;
  ry: 20; */
  /* transition: stroke 0.5s ease; */
  /* transition: stroke-dasharray 1.35s cubic-bezier(0.19, 1, 0.22, 1); */
}

/* --- Hover: Show SVG and animate rect --- */
.sketch:hover svg {
  opacity: 1;
  pointer-events: auto;
}

.modal-content .model_3d {
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  text-align: left;
}

.modal-content .model_3d image {
  width: 10rem;
}



/* .sketch:hover {
  background: transparent;
  font-weight: 900;
  letter-spacing: 1px;
} */

/* .sketch:hover rect {
  stroke-width: 2;
  stroke-dasharray: 0, 310;
  stroke-dashoffset: 1;
  transition: all 1.35s cubic-bezier(0.19, 1, 0.22, 1);
  animation: draw-then-loop 8s linear infinite;
  
} */
.sketch:hover rect {
  animation: dash-loop .5s cubic-bezier(0.19, 1, 0.9, 1) forwards;
}


/* 
@keyframes dash-loop {
  0% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: -522; 
  }
} */




/* --- */


/* Main image */
.image-icon {
  width: 100%;
  height: auto;
  max-width: 100%;
  object-fit: contain;
  transition: transform 0.3s ease;
  z-index: 1;
  filter: drop-shadow(0 0 0 #b0caff);
}


.sketch-mini {
  position: absolute;
  width: 20rem;
  bottom: 4rem;         /* Within padding space */
  right: 0;
  opacity: 0.25;
  z-index: 2;
  pointer-events: none;
  width: 40%;
  height: auto;
  max-width: 100%;
  object-fit: contain;
  filter: drop-shadow(0 0 0 #b0caff);
  transition: transform 0.3s ease;
}



/* .hover-target {
  width: 100%;
} */

/* Left alignment for odd sketches */
/* .content_sketch-container .sketch:nth-child(odd) {
  align-self: flex-start;
} */

/* Right alignment for even sketches */
/* .content_sketch-container .sketch:nth-child(even) {
  align-self: flex-end;
} */


/* Hover effect: Blur all other sketches except the hovered one */
.content_sketch-container:hover .sketch {
  filter: blur(6px);
  transition: filter 0.3s ease;
}

.content_sketch-container .sketch:hover {
  filter: none !important; /* Keep the hovered sketch clear */
  z-index: 2; /* Bring the hovered sketch to the foreground if needed */
}
.sketch_title {
  font-size: 1em;
  /* font-family: 'Courier', monospace; */
  position: relative;
}

/* Pseudo-elements for glitch effect */
.sketch_title::before,
.sketch_title::after {
  content: attr(data-title); /* Dynamically get text from data-title */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
  pointer-events: none;
}

.sketch_title::before {
  color: rgb(47, 47, 51); /* Cyan glitch layer */
  z-index: -1;
  transform: translate(0, 0);
}

.sketch_title::after {
  color: rgb(213, 197, 213); /* Magenta glitch layer */
  z-index: -2;
  transform: translate(0, 0);
}

/* Hover Effect on .sketch to trigger glitch on sketch_title */
.sketch:hover .sketch_title::before {
  animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both 100;
}

.sketch:hover .sketch_title::after {
  animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both 100;
}

.sketch:hover .image-icon {
  animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both 100;
}

.sketch:hover .sketch-mini {
  animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both 100;
}

/* Keyframes for glitch effect */
@keyframes glitch {
  0% {
    transform: translate(0, 0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Optional: Styling for the SVG */
.svg-icon {
  width: 100%;
  /* height: 100px; */
  fill: #b0caff;
}


/* Modal backdrop styling */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.89); /* Semi-transparent backdrop */
  display: flex;
  justify-content: center;
  align-items: center;
  /* background-image: 
  z-index: 9999; /* Ensure it appears above everything */
  /* cursor:default; */
  z-index: 9999;
  opacity: 0; /* Initially hidden */
  animation: fadeIn 0.5s forwards; /* Apply fade-in animation */
  margin: 0;
  padding: 0;
  text-align: left;
  /* pointer-events: none; */
  overflow: hidden;

}

/* Modal content styling */
.modal-content {
  border: 2px solid white;
  width: 90%;
  height: 86vh;
  background: #13173A;
  border-radius: 5px;
  padding: 20px;
  /* max-width: 600px; */
  text-align: left;
  position: relative;
  margin: .1rem 1.3rem;

  position: relative;
  /* overflow-y: scroll; */
  overflow: hidden;

  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 12px 12px; /* Grid cell size */

  transform: translateY(-50px); /* Start off slightly above */
  animation: slideIn 0.5s forwards; /* Apply slide-in animation */

}

.modal-content.slide-out {
  animation: slideOut 0.5s forwards;

}

.modal-content.slide-in {
  animation: slideIn 0.5s forwards;
}

.modal-content::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 8px; /* Height of the ruler area */
  background-image: repeating-linear-gradient(
    to right,
    rgb(255, 255, 255), /* Line color */
    rgb(255, 255, 255) 1px,
    transparent 2px,
    transparent 36px /* Match the grid size */
  );
  z-index: 1;
  pointer-events: none; /* Ensures it doesn't interfere with interactions */
}

.modal-content::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 8px; /* Width of the ruler area */
  background-image: repeating-linear-gradient(
    to bottom,
    rgb(255, 255, 255), /* Line color */
    rgb(255, 255, 255) 1px,
    transparent 2px,
    transparent 36px /* Match the grid size */
  );
  z-index: 1;
  pointer-events: none; /* Ensures it doesn't interfere with interactions */
  
}


/* Close button styling */
.modal-close {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  font-size: 20px;
  color: #fff;
  cursor: none;
}

.modal-body {
  overflow-y: scroll;
  overflow-x: hidden;
  /* fit inside the modal minus any header/top padding you use */
  max-height: calc(86vh - 40px);
  /* keeps layout stable when scrollbar appears */
  scrollbar-gutter: stable both-edges;
  /* optional padding so content doesn't sit under the left ruler */
  padding-left: 12px;               /* slightly > 8px ruler width */
  padding-top: 12px;                /* slightly > 8px top ruler height */
}

/* Custom content styling */
.custom-content {
  margin-top: 20px;
}


/* Fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Slide-in animation */
@keyframes slideIn {
  from {
    transform: translateY(-500px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideOut {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-1500px);
  }
}

/* .sketch {
  position: relative;
  overflow: hidden;
} */

/* Border lines */
.sketch-border {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
}

.sketch-border::before,
.sketch-border::after {
  content: '';
  position: absolute;
  background-color: white;
  transition: all 0.3s ease;
  opacity: 0;
}

/* Top + Bottom line */
.sketch-border::before {
  height: 2px;
  width: 100%;
  top: 0;
  left: 0;
  transform: scaleX(0);
  transform-origin: left;
}

.sketch-border::after {
  height: 2px;
  width: 100%;
  bottom: 0;
  left: 0;
  transform: scaleX(0);
  transform-origin: right;
}

/* Side lines */
.sketch-border .side-line {
  position: absolute;
  width: 2px;
  height: 100%;
  background-color: white;
  top: 0;
  transition: all 0.3s ease;
  opacity: 0;
}

.sketch-border .side-line.left {
  left: 0;
  transform: scaleY(0);
  transform-origin: top;
}

.sketch-border .side-line.right {
  right: 0;
  transform: scaleY(0);
  transform-origin: bottom;
}

.sketch_title {
    font-family: 'Courier', monospace;
    font-size: 1.8em;
    text-align: center;
    font-weight: 300;
    /* margin-left: 8rem; */
    /* width: 40rem; */
}

/* On hover, animate the lines
.sketch:hover .sketch-border::before,
.sketch:hover .sketch-border::after,
.sketch:hover .sketch-border .side-line {
  transform: scale(1);
  opacity: 1;
} */

.meta_data {
  margin-left: 5rem;
}

.image-icon {
  transition: transform 0.3s ease;
  width: 30vw;
}



.sketch:hover .image-icon {
  transform: scale(1.05);
}

.media-row {
  display: flex;
  /* gap: 1rem; */
  align-items: center;
  justify-content: space-between;
}

.model-col {
  flex: 3; 
  /* min-width: 0; */
  /* width: 20rem; */
}

.images-col {
  flex: 1;  
  display: flex;
  /* flex-direction: row; */
  /* display: flex;
  /* flex-direction: row; 
  gap: 0.5rem; */
}

.images-col img {
  width: 70%;
  height: auto;
  display: block;
  object-fit: contain;
}

.construction-banner-img {
  position: absolute;
  z-index: 99;
  pointer-events: none;
  top: -25%;
  left: 45%;
  width: 75%;          /* long diagonal strip across card */
  height: auto;
  image-rendering: auto;
  filter: drop-shadow(0 2px 6px rgba(0,0,0,0.25));
}

